# Cap 3.2.1

#Random Sampling


#'calculates the BLE for the Random Sampling design
#'@note I actually created this function just to describe the parameters, to use in the real functions
#'
#'@param ys sample
#'@param m prior mean
#'@param v prior variance of an element from the population
#'@param c prior covariance between different elements from the population
#'@param N total size of the population
#'

BLE_RS <- function(ys,m,v,c,N){
  return(5)
}


#' calculates the prior relative precision
#'
#' @inheritParams BLE_RS

omega <- function(ys,m,v,c,N){
  n = length(ys)
  sigma2 <- v-c
  num <- n/sigma2
  den <- (1/c) + num
  return(num/den)
}


#' calculates the expected value for the non-observed individuals
#'
#' @inheritParams BLE_RS

E_theta_RS <- function(ys,m,v,c,N){
  w <- omega(ys,m,v,c,N)
  p1 <- w*mean(ys)
  p2 <- (1-w)*m
  return(p1+p2)
}


#'calculates the posterior covariance matrix of theta given the sample
#'@inheritParams BLE_RS
#'
#'
V_theta_RS <- function(ys,m,v,c,N){
  n <- length(ys)
  p1 <- matrix(c,nrow=n,ncol=n)
  p2 <- diag(n)*(v-c)
  v <- p1+p2
  return(v)
}


#' calculates de BLE of the total T
#'
#' @inheritParams BLE_RS

T_RS <- function(ys,m,v,c,N){
  mu <- E_theta_RS(ys,m,v,c,N)
  n <- length(ys)
  tot <- sum(ys) + (N-n)*mu
  return(tot)
}



#' calculates the posterior variance of the BLE of T
#'
#' @inheritParams BLE_RS

VT_RS <- function(ys,m,v,c,N) {
  sigma2 <- v-c
  n <- length(ys)
  p1 <- (N-n)*sigma2
  p21 <- p1*(N-n)*c
  p22 <- sigma2 + n*c
  p2 <- p21/p22
  res <- p1 + p2
  return(res)
}



#' actual BLE function
#' @inheritParams BLE_RS
#'
#' @export
BLE_RS.1 <- function(ys,m,v,c,N){
  #result$y_nots <- as.data.frame(E_theta_RS(ys,m,v,c,N))
  #result$var_y_nots <- as.data.frame(V_theta_RS(ys,m,v,c,N))
  #result$total <- T_RS(ys,m,v,c,N)
  #result$var_total <- VT_RS(ys,m,v,c,N)
  y_nots <- as.data.frame(E_theta_RS(ys,m,v,c,N))
  var_y_nots <- as.data.frame(V_theta_RS(ys,m,v,c,N))
  total <- T_RS(ys,m,v,c,N)
  var_total <- VT_RS(ys,m,v,c,N)

  return(list(est = y_nots, Vest = var_y_nots, tot = total, Vtot = var_total))
}

#t <- BLE_RS.1(teste[,1],1000,10000,100,500)
